name: Deploy to EC2  

on:
  push:
    branches:
      - main  # Cambia esto si usas otra rama

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v3

    - name: Login en Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Construir y subir imagen a Docker Hub
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/board-create-service .
        docker push ${{ secrets.DOCKER_USERNAME }}/board-create-service:latest

    - name: Configurar EC2, instalar Docker y desplegar
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user  # Usuario correcto para Amazon Linux
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "🔄 Actualizando paquetes..."
          sudo dnf update -y

          echo "🛠 Instalando Docker si no está presente..."
          if ! command -v docker &> /dev/null; then
            sudo dnf install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ec2-user
          fi
          
          echo "🚀 Asegurando que Docker está corriendo..."
          sudo systemctl start docker
          sudo systemctl enable docker

          echo "🔧 Instalando Docker Compose si no está instalado..."
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

          echo "🔍 Verificando red Docker..."
          docker network ls | grep taskify-network || docker network create taskify-network

          echo "📂 Creando archivo .env en EC2..."
          cat <<EOT > .env
          DB_USER=postgres
          DB_HOST=database-board.ccu0ctaytxmv.us-east-1.rds.amazonaws.com
          DB_NAME=database-board
          DB_PASSWORD=sis12345
          DB_PORT=5432
          PORT=4000
          JWT_SECRET=supersecreto
          EOT
          chmod 600 .env

          echo "📥 Descargando nueva imagen desde Docker Hub..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/board-create-service:latest
          
          echo "🛑 Deteniendo y eliminando contenedor anterior..."
          docker stop board-create-service || true
          docker rm board-create-service || true
          
          echo "🚀 Iniciando nuevo contenedor..."
          docker run -d --name board-create-service -p 4000:4000 --restart=always --network=taskify-network --env-file .env \
            ${{ secrets.DOCKER_USERNAME }}/board-create-service:latest

          echo "✅ Despliegue completado con éxito."
